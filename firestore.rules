rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  	match /users/{userId} {
      allow read: if isLoggedIn();
  		allow write: if isOwner(userId);
  	}
    
    match /posts/{postId} {
    	allow read: if isLoggedIn();
      allow create: if isOwner(request.resource.data.userId);
      allow update: if isOwner(resource.data.userId) || canUpdatePostMetadata();
      allow delete: if isOwner(resource.data.userId);
      
      match /comments/{commentId} {
      	allow read: if isLoggedIn();
        allow create: if isOwner(request.resource.data.userId);
        allow update, delete: if isOwner(resource.data.userId);
      }
    }
    
    match /categories/{categoryId} {
    	allow read: if true;
      allow write: if false;
    }
    
    function canUpdatePostMetadata() {
    	return isLoggedIn()
        && fieldUnchanged('title')
        && fieldUnchanged('text')
        && fieldUnchanged('userId')
        && fieldUnchanged('createdDate')
        && fieldUnchanged('linkType')
        && fieldUnchanged('url');
    }

    function fieldUnchanged(key) {
      return key in resource.data ? resource.data[key] == request.resource.data[key] : true;
    }
    
    function isOwner(userId) {
    	return request.auth.uid == userId;
    }
    
    function isLoggedIn() {
    	return request.auth.uid != null;
    }
    
    match /{document=**} {
      allow read, write: if false;
    }
  }
}